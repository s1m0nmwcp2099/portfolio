7th February, 2021

Warnings for incomplete input coded.
- Invoice summary details written to csv file.
- Invoice number written to text file to generate next invoice number in sequence.

To do:
- Create dataframe from invoice summary details to overwrite, instead of duplicate invoice number and details if invoice is changed
later. This will also eliminate the need to keep last invoice as text file which could be problematic for sequencing next invoice 
number after editing a previous invoice.


5th February, 2021

Edit and delete buttons for items are functional.


1st February, 2021

Resolved issue of invoice item indexes not correlating to lines on gui after other items have been deleted. This was done by adding
a boolean list to specify whether each invoice item is active.


30th January, 2021

Delete button command completed.


26th January, 2021

This is an app that produces invoices. It utilises Tkinter for the user to input the information
requred to produce an invoice. 

The main window contains a dropdown box to select the invoicee from the customer details
which are stored in a csv file, 2 buttons induce the Tkcalendar to set the invoice and due by
dates and there are 2 text boxes for the order number and invoice number.
The 'add' button opens another window which allows the user to add items including description,
quantity, price and tax. When added these items appear in the previous window.

The 'generate PDF' button produces a pdf of the invoice using PyFPDF. The design is
faithfully based on that produced by Wave (https://next.waveapps.com) which is an accounting 
website that I have used for invoicing for several years.

Next steps: 
    - provide relevant actions to the 'edit' and 'delete' buttons for each item;
    - generate invoice numbering sequence for user after they have specified start number;
    - store pdf invoices in a folder for the user to access;
    - record invoice details in a csv file;
    - iron out any bugs.